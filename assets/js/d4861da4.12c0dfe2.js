"use strict";(self.webpackChunkrxcats_blog=self.webpackChunkrxcats_blog||[]).push([[873],{5680:(n,e,t)=>{t.d(e,{xA:()=>d,yg:()=>g});var a=t(6540);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,s=function(n,e){if(null==n)return{};var t,a,s={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var l=a.createContext({}),u=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},d=function(n){var e=u(n.components);return a.createElement(l.Provider,{value:e},n.children)},c="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,s=n.mdxType,r=n.originalType,l=n.parentName,d=i(n,["components","mdxType","originalType","parentName"]),c=u(t),m=s,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||r;return t?a.createElement(g,o(o({ref:e},d),{},{components:t})):a.createElement(g,o({ref:e},d))}));function g(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var r=t.length,o=new Array(r);o[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[c]="string"==typeof n?n:s,o[1]=i;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9821:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=t(8168),s=(t(6540),t(5680));const r={slug:"setup-develop-env-linux",title:"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)",authors:["rxcats"],tags:["setup","develop","environment"],date:new Date("2024-03-13T03:00:00.000Z")},o=void 0,i={permalink:"/rxcats-blog/blog/setup-develop-env-linux",source:"@site/blog/2024-03-13-setup-develop-linux.mdx",title:"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)",description:"Linux (Ubuntu 22.04)",date:"2024-03-13T03:00:00.000Z",formattedDate:"March 13, 2024",tags:[{label:"setup",permalink:"/rxcats-blog/blog/tags/setup"},{label:"develop",permalink:"/rxcats-blog/blog/tags/develop"},{label:"environment",permalink:"/rxcats-blog/blog/tags/environment"}],hasTruncateMarker:!1,authors:[{name:"rxcats",title:"Game Backend Developer",url:"https://github.com/rxcats",imageURL:"https://avatars.githubusercontent.com/u/6582519?v=4",key:"rxcats"}],frontMatter:{slug:"setup-develop-env-linux",title:"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)",authors:["rxcats"],tags:["setup","develop","environment"],date:"2024-03-13T03:00:00.000Z"},prevItem:{title:"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30",permalink:"/rxcats-blog/blog/ssh-config"},nextItem:{title:"Apache POI autoSizeColumn() \uc0ac\uc6a9\uc2dc \uc624\ub798 \uac78\ub9ac\ub294 \uc99d\uc0c1",permalink:"/rxcats-blog/blog/apache-poi-auto-size-column"}},l={authorsImageUrls:[void 0]},u=[{value:"Linux (Ubuntu 22.04)",id:"linux-ubuntu-2204",level:2},{value:"\uc124\uce58 \uba85\ub839\uc5b4",id:"\uc124\uce58-\uba85\ub839\uc5b4",level:3}],d={toc:u},c="wrapper";function p(n){let{components:e,...t}=n;return(0,s.yg)(c,(0,a.A)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"linux-ubuntu-2204"},"Linux (Ubuntu 22.04)"),(0,s.yg)("h3",{id:"\uc124\uce58-\uba85\ub839\uc5b4"},"\uc124\uce58 \uba85\ub839\uc5b4"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-bash"},'# add sudoers: \uc2dc\uc2a4\ud15c \uad8c\ud55c\uc774 \ud544\uc694\ud560 \ub54c \ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uae30 \uc704\ud55c \uc124\uc815\necho "ubuntu ALL=(ALL) ALL\\nubuntu ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/10-ubuntu\n\nsudo apt -y update\nsudo apt -y upgrade\nsudo apt install -y build-essential procps curl file git zsh unzip dirmngr gpg gawk software-properties-common apt-transport-https ca-certificates lsb-release\n\n# oh-my-zsh\nsh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting\n\n# docker\necho "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt -y update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose\n\n# redis\ncurl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg\necho "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list\nsudo apt -y update\nsudo apt install -y redis\n\n# mysql8.0\nsudo apt install -y mysql-server-8.0\n\n# root \uacc4\uc815 \ube44\ubc00\ubc88\ud638 \uc5c6\ub294 \uc0c1\ud0dc\ub85c db \uad6c\ucd95\nsudo rm -rf /var/lib/mysql\nsudo mkdir -p /var/lib/mysql\nsudo mysqld --initialize-insecure --user=mysql\n\n# my.cnf\n[mysqld]\ndefault_authentication_plugin=mysql_native_password\ndefault-time-zone = \'+00:00\'\ngeneral_log = 1\ngeneral_log_file = general_log.log\ncharacter_set_server = utf8mb4\ncollation_server = utf8mb4_general_ci\n\n\n# mysql \uacc4\uc815\uc0dd\uc131\ncreate user develop@\'%\' identified by \'secret\';\ngrant all privileges on *.* to develop@\'%\' with grant option;\nflush privileges;\n\n# dynamodb-local\nsudo mkdir -p /etc/dynamodb\nsudo mkdir -p /usr/share/dynamodb\nsudo mkdir -p /usr/share/jre\n\n# prepare jre\nwget https://cdn.azul.com/zulu/bin/zulu17.48.15-ca-jre17.0.10-linux_x64.zip\nsudo unzip zulu17.48.15-ca-jre17.0.10-linux_x64.zip -d /usr/share/jre\n\n# https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html\nwget https://d1ni2b6xgvw0s0.cloudfront.net/v2.x/dynamodb_local_latest.tar.gz\nsudo tar xvfz dynamodb_local_latest.tar.gz -C /usr/share/dynamodb\n\nsudo cat <<EOF > /etc/dynamodb/config.cfg\n#The port that dynamo will run on\nport=8000\n\n#The path of the directory for the database file\ndbPath=/var/lib/dynamodb\n\n#This will make the DB region agnostic\nshared=true\n\n#Use this if you want to run the db in memory\n#note: it wont be saved if the db is stopped\n#inMemory=true\n\n#Use this for any additional args\n#additionalArgs=(\'-optimiozeDbBeforeStartup\')\nEOF\n\n# prepare shell\nsudo cat <<EOF > /usr/bin/dynamodb\n#!/bin/bash\n\ndynamodb_java_home="/usr/share/jre/zulu17.48.15-ca-jre17.0.10-linux_x64"\n\nif [ -e /etc/dynamodb/config.cfg ]; then\n  source /etc/dynamodb/config.cfg\nelse\n  shared=true\n  dbPath=/var/lib/dynamodb\n  port=8000\nfi\n\nlibrarypath=/usr/share/dynamodb/DynamoDBLocal_lib\njar=/usr/share/dynamodb/DynamoDBLocal.jar\nargs=("-Djava.library.path=$librarypath" "-jar $jar" "-port $port")\n\nif [ $shared ]; then\n  args+=(\'-sharedDb\')\nfi\n\nif [ $inMemory ]; then\n  args+=(\'-inMemory\')\nelse\n  args+=("-dbPath $dbPath")\nfi\n\nargs+=($additionalArgs)\n\ncommand="$dynamodb_java_home/bin/java"\n\necho ${args[*]}\n\n$command ${args[*]}\nEOF\n\nsudo chmod +x /usr/bin/dynamodb\n\n# prepare systemd\nsudo cat <<EOF > /usr/lib/systemd/system/dynamodb.service\n[Unit]\nDescription=Amazon DynamoDB Local Daemon\nAfter=network.target\n\n[Service]\nUser=root\nExecStart=/usr/bin/dynamodb\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\n# systemctl \uad00\ub9ac\nsudo systemctl enable mysql\nsudo systemctl enable redis\nsudo systemctl enable dynamodb\n\nsudo systemctl restart mysql\nsudo systemctl restart redis\nsudo systemctl restart dynamodb\n\n# tools\nsudo snap install -y btop lsd neovim\n\n\n# windows wslg \ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c tools\nsudo apt install ibus-hangul\n\n# \uc2dc\uc2a4\ud15c \ud55c\uae00 \ud3f0\ud2b8\nsudo apt install fonts-noto-cjk\n\n# nerd-fonts (ligatures)\n# https://www.nerdfonts.com/font-downloads\nmkdir ~/.fonts\nwget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/CascadiaCode.zip\nunzip CascadiaCode.zip -d ~/.fonts\n\n# \ud3f0\ud2b8 \uce90\uc2dc \uac31\uc2e0\nsudo fc-cache -f -v\n\n# jetbrains-toolbox\n# https://github.com/nagygergo/jetbrains-toolbox-install\nsudo apt install -y libfuse2 libxi6 libxrender1 libxtst6 mesa-utils libfontconfig libgtk-3-bin tar\ncurl -fsSL https://raw.githubusercontent.com/nagygergo/jetbrains-toolbox-install/master/jetbrains-toolbox.sh | bash\n\n\n# .zprofile\nexport XIM=ibus\nexport XIM_PROGRAM=/usr/bin/ibus\nexport QT_IM_MODULE=ibus\nexport GTK_IM_MODULE=ibus\nexport XMODIFIERS=@im=ibus\nexport DefaultIMModule=ibus\n\nalias vi="vim"\nalias ls="lsd"\nalias ll="lsd -al"\nalias systemctl="sudo systemctl"\nalias apt="sudo apt"\nalias snap="sudo snap"\n\nif [ -d "/snap/bin" ]; then\n    export PATH=$PATH:/snap/bin\nfi\n\nif [ -d "$HOME/bin" ]; then\n    export PATH=$PATH:$HOME/bin\nfi\n\nif [ -d "$HOME/.local/bin" ]; then\n    export PATH=$PATH:$HOME/.local/bin\nfi\n\nif [ -f /opt/asdf-vm/asdf.sh ]; then\n    source /opt/asdf-vm/asdf.sh\n    source $HOME/.asdf/plugins/java/set-java-home.zsh\nfi\n\nif [ -d $HOME/.asdf ]; then\n    source $HOME/.asdf/asdf.sh\n    source $HOME/.asdf/plugins/java/set-java-home.zsh\nfi\n\ngit_account_rxcats() {\n    git config user.name "rxcats"\n    git config user.email "windpyj80@gmail.com"\n\n    echo "name: $(git config user.name)"\n    echo "email: $(git config user.email)"\n}\n\ngit_reset_pull() {\n    if [ -z "$1" ]\n    then\n        echo "require parameter origin. ex) origin/master"\n    else\n        git reset --hard $1\n        git pull\n    fi\n}\n\n')))}p.isMDXComponent=!0}}]);