"use strict";(self.webpackChunkrxcats_blog=self.webpackChunkrxcats_blog||[]).push([[991],{9832:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"shoptitans-spreadsheet","metadata":{"permalink":"/rxcats-blog/blog/shoptitans-spreadsheet","source":"@site/blog/2024-03-18-shoptitans-spreadsheet.mdx","title":"Shop Titans - Official Data Spreadsheet","description":"Official Data Spreadsheet","date":"2024-03-18T03:00:00.000Z","formattedDate":"March 18, 2024","tags":[{"label":"Shop Titans","permalink":"/rxcats-blog/blog/tags/shop-titans"},{"label":"Official Data Spreadsheet","permalink":"/rxcats-blog/blog/tags/official-data-spreadsheet"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"shoptitans-spreadsheet","title":"Shop Titans - Official Data Spreadsheet","authors":["rxcats"],"tags":["Shop Titans","Official Data Spreadsheet"],"date":"2024-03-18T03:00:00.000Z"},"nextItem":{"title":"Spring Message Converter \ud65c\uc6a9 \ud328\ud0b7 \uc554\ud638\ud654","permalink":"/rxcats-blog/blog/spring-message-converter"}},"content":"## Official Data Spreadsheet\\n\\n[\ubc14\ub85c\uac00\uae30](https://docs.google.com/spreadsheets/d/1WLa7X8h3O0-aGKxeAlCL7bnN8-FhGd3t7pz2RCzSg8c)"},{"id":"spring-message-converter","metadata":{"permalink":"/rxcats-blog/blog/spring-message-converter","source":"@site/blog/2024-02-28-spring-message-converter.mdx","title":"Spring Message Converter \ud65c\uc6a9 \ud328\ud0b7 \uc554\ud638\ud654","description":"Spring MessageConverter \ub97c \uc774\uc6a9\ud55c \ud328\ud0b7 \uc554/\ubcf5\ud638\ud654","date":"2024-03-14T03:00:00.000Z","formattedDate":"March 14, 2024","tags":[{"label":"Spring","permalink":"/rxcats-blog/blog/tags/spring"},{"label":"MessageConverter","permalink":"/rxcats-blog/blog/tags/message-converter"},{"label":"AES","permalink":"/rxcats-blog/blog/tags/aes"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"spring-message-converter","title":"Spring Message Converter \ud65c\uc6a9 \ud328\ud0b7 \uc554\ud638\ud654","authors":["rxcats"],"tags":["Spring","MessageConverter","AES"],"date":"2024-03-14T03:00:00.000Z"},"prevItem":{"title":"Shop Titans - Official Data Spreadsheet","permalink":"/rxcats-blog/blog/shoptitans-spreadsheet"},"nextItem":{"title":"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30","permalink":"/rxcats-blog/blog/ssh-config"}},"content":"## Spring MessageConverter \ub97c \uc774\uc6a9\ud55c \ud328\ud0b7 \uc554/\ubcf5\ud638\ud654\\n\\n### Unity \uac8c\uc784 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \ud1b5\uc2e0\uc2dc Http body \ub97c \uc554/\ubcf5\ud638\ud654 \ud558\uae30 \uc704\ud55c \uc804\ub7b5\\n- \ub300\uce6d\ud0a4\ub97c \uc0ac\uc6a9\\n- HTTP \uc694\uccad \ud5e4\ub354\uc758 Content-Type \uacfc Accept \ub97c \uc774\uc6a9\ud558\uc5ec \uc694\uccad\uacfc \uc751\ub2f5 \uba54\uc2dc\uc9c0\uc758 \uc885\ub958\ub97c \ud310\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n- \uc694\uccad \ud5e4\ub354 Content-Type \uc774 application/vnd.company.alpha \uc778 \uacbd\uc6b0 AesHttpMessageConverter \uac00 \ub3d9\uc791, application/json \uc774\uba74 MappingJackson2HttpMessageConverter \uac00 \ub3d9\uc791\ud558\uc5ec Request Body \ub97c \ub514\ucf54\ub529 \ud6c4 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 Controller \ub85c \ub9e4\ud551\ud558\uc5ec \uc90d\ub2c8\ub2e4.\\n- \uc694\uccad \ud5e4\ub354 Accept \uac00 application/vnd.company.alpha \uc778 \uacbd\uc6b0 AesHttpMessageConverter \uac00 \ub3d9\uc791, \uc544\ub2c8\uba74 \uae30\ubcf8 Converter \uac00 \ub3d9\uc791 (@RestController \uc774\uba74 MappingJackson2HttpMessageConverter \uac00 \ub3d9\uc791) \ud558\uc5ec Response Body \ub97c \uc778\ucf54\ub529 \ud6c4 \uc804\uc1a1\ud558\uac8c \ub429\ub2c8\ub2e4.\\n\\n\\n### \uc11c\ubc84\\n```kotlin\\n// AES MediaType \uc815\uc758\\nobject AesMediaType {\\n\\n    const val APPLICATION_AES_VALUE = \\"application/vnd.company.alpha\\"\\n    const val APPLICATION_AES_VALUE_UTF8 = \\"application/vnd.company.alpha;charset=UTF-8\\"\\n\\n    val APPLICATION_AES = MediaType.valueOf(APPLICATION_LITEMETA_VALUE)\\n    val APPLICATION_AES_UTF8 = MediaType.valueOf(APPLICATION_LITEMETA_VALUE_UTF8)\\n\\n}\\n\\n// AES \uc554/\ubcf5\ud638\ud654 MessageConverter\\nclass AesHttpMessageConverter : AbstractHttpMessageConverter<Any>(Charsets.UTF_8, AesMediaType.APPLICATION_AES, AesMediaType.APPLICATION_AES_UTF8) {\\n    private val log by loggerK\\n\\n    override fun supports(clazz: Class<*>): Boolean {\\n        return true\\n    }\\n\\n    // \uc694\uccad \ud328\ud0b7\uc758 Content-Type \ud5e4\ub354\uac00 AbstractHttpMessageConverter \uc0dd\uc131\uc790\ub97c \ud1b5\ud574 \uc124\uc815\ud55c MediaType\uc5d0 \ud574\ub2f9\ub418\uba74 readInternal \uc801\uc6a9\\n    override fun canRead(mediaType: MediaType?): Boolean {\\n        if (mediaType == null) {\\n            return false\\n        }\\n        return supportedMediaTypes.contains(mediaType)\\n    }\\n\\n    // \uc694\uccad \ud328\ud0b7\uc758 Accept \ud5e4\ub354\uac00 AbstractHttpMessageConverter \uc0dd\uc131\uc790\ub97c \ud1b5\ud574 \uc124\uc815\ud55c MediaType\uc5d0 \ud574\ub2f9\ub418\uba74 writeInternal \uc801\uc6a9\\n    override fun canWrite(mediaType: MediaType?): Boolean {\\n        if (mediaType == null) {\\n            return false\\n        }\\n        return supportedMediaTypes.contains(mediaType)\\n    }\\n\\n    // \uc751\ub2f5 \ud328\ud0b7 \uc554\ud638\ud654 \uc801\uc6a9\\n    override fun writeInternal(t: Any, outputMessage: HttpOutputMessage) {\\n        val json = Json.stringify(t)\\n\\n        if (log.isDebugEnabled) {\\n            log.debug(\\"write json: {}\\", json)\\n        }\\n\\n        val encoded = AesCipher.encodeOrThrow(json)\\n\\n        if (log.isDebugEnabled) {\\n            log.debug(\\"write encoded: {}\\", encoded)\\n        }\\n\\n        outputMessage.body.use {\\n            it.write(encoded.toByteArray(Charsets.UTF_8))\\n        }\\n    }\\n\\n    // \uc694\uccad \ud328\ud0b7 \ubcf5\ud638\ud654\\n    override fun readInternal(clazz: Class<out Any>, inputMessage: HttpInputMessage): Any {\\n        val encoded = inputMessage.body.use { body -> String(body.readBytes(), Charsets.UTF_8) }\\n\\n        if (log.isDebugEnabled) {\\n            log.debug(\\"read encoded: {}\\", encoded)\\n        }\\n\\n        val decoded = AesCipher.decodeOrThrow(encoded)\\n\\n        if (log.isDebugEnabled) {\\n            log.debug(\\"read json: {}\\", decoded)\\n        }\\n\\n        return Json.parse(decoded, clazz)\\n    }\\n}\\n\\n\\n// AES \uc554\ud638\ud654 \uad00\ub828\\n\\nclass AesDecodeException(message: String, cause: Throwable? = null) : RuntimeException(message, cause)\\nclass AesEncodeException(message: String, cause: Throwable? = null) : RuntimeException(message, cause)\\n\\nobject AesCipher {\\n    private var secretKey by Delegates.notNull<String>()\\n    private var iv by Delegates.notNull<String>()\\n    private const val ALGORITHM = \\"AES\\"\\n    private const val TRANSFORMATION = \\"AES/CBC/PKCS5Padding\\"\\n    private const val SECRET_KEY_PROPERTIES_NAME = \\"app.config.aes.secret-key\\"\\n    private const val FALLBACK_SECRET_KEY = \\"4f22ad9345c139094fd3d4c0ca7d5acc\\"\\n\\n    init {\\n        val env = ApplicationContextProvider.getBean<Environment>()\\n        secretKey = env.getProperty(SECRET_KEY_PROPERTIES_NAME, FALLBACK_SECRET_KEY)\\n        iv = secretKey.substring(0, 16)\\n    }\\n\\n    fun encode(value: String): Result<String> {\\n        return runCatching {\\n            val textBytes = value.toByteArray(Charsets.UTF_8)\\n            val ivSpec = IvParameterSpec(iv.toByteArray(Charsets.UTF_8))\\n            val newKey = SecretKeySpec(secretKey.toByteArray(Charsets.UTF_8), ALGORITHM)\\n            val cipher = Cipher.getInstance(TRANSFORMATION)\\n            cipher.init(Cipher.ENCRYPT_MODE, newKey, ivSpec)\\n            Base64.getEncoder().encodeToString(cipher.doFinal(textBytes))\\n        }\\n    }\\n\\n    fun encode(value: ByteArray): Result<String> = encode(String(value))\\n\\n    fun encodeOrThrow(value: String): String {\\n        val result = encode(value)\\n\\n        result.onFailure { e ->\\n            throw AesEncodeException(e.message.orEmpty(), e)\\n        }\\n\\n        return result.getOrThrow()\\n    }\\n\\n    fun decode(value: String): Result<String> {\\n        return runCatching {\\n            val textBytes = Base64.getDecoder().decode(value)\\n            val ivSpec = IvParameterSpec(iv.toByteArray(Charsets.UTF_8))\\n            val newKey = SecretKeySpec(secretKey.toByteArray(Charsets.UTF_8), ALGORITHM)\\n            val cipher = Cipher.getInstance(TRANSFORMATION)\\n            cipher.init(Cipher.DECRYPT_MODE, newKey, ivSpec)\\n            String(cipher.doFinal(textBytes), Charsets.UTF_8)\\n        }\\n    }\\n\\n    fun decode(value: ByteArray): Result<String> = decode(String(value))\\n\\n    fun decodeOrThrow(value: String): String {\\n        val result = decode(value)\\n\\n        result.onFailure { e ->\\n            throw AesDecodeException(e.message.orEmpty(), e)\\n        }\\n\\n        return result.getOrThrow()\\n    }\\n}\\n\\n\\n// \uc124\uc815\uc5d0 AesHttpMessageConverter Bean \ucd94\uac00\\n@Configuration(proxyBeanMethods = false)\\nclass WebConfig : WebMvcConfigurer {\\n    @Bean\\n    fun httpMessageConverters(): HttpMessageConverters {\\n        return HttpMessageConverters(AesHttpMessageConverter())\\n    }\\n}\\n\\n// Controller produces \ud56d\ubaa9\uc5d0 \uc801\uc6a9\ud560 MediaType \uc120\uc5b8\\n@RequestMapping(\\"/api/hello\\", produces = [MediaType.APPLICATION_JSON_VALUE, AesMediaType.APPLICATION_AES_VALUE])\\n@RestController\\nclass HelloApiController\\n\\n```\\n\\n\\n### \ud074\ub77c\uc774\uc5b8\ud2b8\\n\\n```csharp\\n/// <summary>\\n/// \ud328\ud0b7 \uc554\ud638\ud654\\n///\\n/// \ucd9c\ucc98: http://blog.zebsadiq.com/post/AESCBCPKCS5Padding-EncryptionDecryption-in-C.aspx\\n///\\n/// \uc0ac\uc6a9\ubc29\ubc95 \uc608\uc2dc\\n///\\n/// \uc554\ud638\ud654\\n/// AesCipher.Encode(\\"plainText\\", \\"\uc554\ud638\ud654\ud0a4\\", \\"\uc554\ud638\ud654\ud0a4\\".Substring(0,16))\\n/// \uacb0\uacfc : JF+X5e3xY5QEFzmqyYJUQc4S6OCR/LVTAqILL5psshUSpyghFR4tVCgP/lkfUisANPqjKlyIQNFL32okeF6aOjcqwPJO3UDFKKC1uAv7EFU=\\n///\\n/// \ubcf5\ud638\ud654\\n/// AesCipher.Decode(\\"cipherText\\", \\"\uc554\ud638\ud654\ud0a4\\", \\"\uc554\ud638\ud654\ud0a4\\".Substring(0,16))\\n/// \uacb0\uacfc : {\\"code\\":0,\\"message\\":\\"SUCCESS\\",\\"data\\":{\\"message\\":\\"hello!\\"},\\"now\\":1656463353678}\\n/// </summary>\\npublic static class AesCipher\\n{\\n    public static string Encode(string value)\\n    {\\n        using (var rm = new RijndaelManaged())\\n        {\\n            rm.Key = HexStringToByte(UserDefine.secretKey);\\n            rm.IV = HexStringToByte(UserDefine.iv);\\n            rm.Mode = CipherMode.CBC;\\n            rm.Padding = PaddingMode.PKCS7;\\n\\n            var encrypted = EncryptStringToBytes(value, rm.Key, rm.IV);\\n\\n            return Convert.ToBase64String(encrypted);\\n        }\\n    }\\n\\n    public static string Decode(string value)\\n    {\\n        using (var rm = new RijndaelManaged())\\n        {\\n            rm.Key = HexStringToByte(UserDefine.secretKey);\\n            rm.IV = HexStringToByte(UserDefine.iv);\\n            rm.Mode = CipherMode.CBC;\\n            rm.Padding = PaddingMode.PKCS7;\\n\\n            var ourEnc = Convert.FromBase64String(value);\\n\\n            return DecryptStringFromBytes(ourEnc, rm.Key, rm.IV);\\n        }\\n    }\\n\\n    private static bool IsJsonObject(string value)\\n    {\\n        return value.StartsWith(\'{\');\\n    }\\n\\n    private static bool IsJsonArray(string value)\\n    {\\n        return value.StartsWith(\'[\');\\n    }\\n\\n    private static bool IsJson(string value)\\n    {\\n        return IsJsonObject(value) || IsJsonArray(value);\\n    }\\n\\n    public static string DecodeIfEncrypted(string value)\\n    {\\n        if (IsJson(value))\\n        {\\n            return value;\\n        }\\n\\n        return Decode(value);\\n    }\\n\\n    static byte[] EncryptStringToBytes(string plainText, byte[] key, byte[] iv)\\n    {\\n        if (plainText == null || plainText.Length <= 0)\\n            throw new ArgumentNullException(nameof(plainText));\\n        if (key == null || key.Length <= 0)\\n            throw new ArgumentNullException(nameof(key));\\n        if (iv == null || iv.Length <= 0)\\n            throw new ArgumentNullException(nameof(key));\\n\\n        byte[] encrypted;\\n\\n        using (var rijAlg = new RijndaelManaged())\\n        {\\n            rijAlg.Key = key;\\n            rijAlg.IV = iv;\\n\\n            // Create a decrytor to perform the stream transform.\\n            ICryptoTransform encryptor = rijAlg.CreateEncryptor(rijAlg.Key, rijAlg.IV);\\n\\n            // Create the streams used for encryption.\\n            using (var msEncrypt = new MemoryStream())\\n            {\\n                using (var csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\\n                {\\n                    using (var swEncrypt = new StreamWriter(csEncrypt))\\n                    {\\n                        swEncrypt.Write(plainText);\\n                    }\\n\\n                    encrypted = msEncrypt.ToArray();\\n                }\\n            }\\n        }\\n\\n        return encrypted;\\n    }\\n\\n    static string DecryptStringFromBytes(byte[] cipherText, byte[] key, byte[] iv)\\n    {\\n        if (cipherText == null || cipherText.Length <= 0)\\n            throw new ArgumentNullException(nameof(cipherText));\\n        if (key == null || key.Length <= 0)\\n            throw new ArgumentNullException(nameof(key));\\n        if (iv == null || iv.Length <= 0)\\n            throw new ArgumentNullException(nameof(iv));\\n\\n        string plainText;\\n\\n        using (var rm = new RijndaelManaged())\\n        {\\n            rm.Key = key;\\n            rm.IV = iv;\\n\\n            ICryptoTransform decryptor = rm.CreateDecryptor(rm.Key, rm.IV);\\n\\n            using (var msDecrypt = new MemoryStream(cipherText))\\n            {\\n                using (var csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\\n                {\\n                    using (var srDecrypt = new StreamReader(csDecrypt))\\n                    {\\n                        plainText = srDecrypt.ReadToEnd();\\n                    }\\n                }\\n            }\\n        }\\n\\n        return plainText;\\n    }\\n\\n    static byte[] HexStringToByte(string hexString)\\n    {\\n        return Encoding.UTF8.GetBytes(hexString);\\n    }\\n}\\n\\n\\n```"},{"id":"ssh-config","metadata":{"permalink":"/rxcats-blog/blog/ssh-config","source":"@site/blog/2024-03-14-ssh-config.mdx","title":"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30","description":"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30","date":"2024-03-14T03:00:00.000Z","formattedDate":"March 14, 2024","tags":[{"label":"ssh","permalink":"/rxcats-blog/blog/tags/ssh"},{"label":"config","permalink":"/rxcats-blog/blog/tags/config"},{"label":"develop","permalink":"/rxcats-blog/blog/tags/develop"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"ssh-config","title":"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30","authors":["rxcats"],"tags":["ssh","config","develop"],"date":"2024-03-14T03:00:00.000Z"},"prevItem":{"title":"Spring Message Converter \ud65c\uc6a9 \ud328\ud0b7 \uc554\ud638\ud654","permalink":"/rxcats-blog/blog/spring-message-converter"},"nextItem":{"title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)","permalink":"/rxcats-blog/blog/setup-develop-env-linux"}},"content":"## SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30\\n\\n### git \uacc4\uc815 \uc0ac\uc6a9\uc2dc \uac1c\uc778 \uacc4\uc815\uacfc \ud68c\uc0ac\uacc4\uc815 \ub4f1 \uc5ec\ub7ec\uac1c\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uc6a9\ub3c4\\n\\n- config \ud30c\uc77c\uc744 \uc774\uc6a9\ud558\uc5ec \uc2a4\uc704\uce6d\\n```bash\\n# \uacbd\ub85c: ~/.ssh/config\\n\\n# \ud68c\uc0ac github\\nHost gh_company\\n  HostName github.com\\n  User git\\n  IdentityFile ~/.ssh/gh-rsa-company/id_rsa\\n\\n# \ud68c\uc0ac bitbucket\\nHost bb_company\\n  HostName bitbucket.org\\n  User git\\n  IdentityFile ~/.ssh/bb-rsa-company/id_rsa\\n\\n# \uac1c\uc778 github\\nHost gh_private\\n  HostName github.com\\n  User git\\n  IdentityFile ~/.ssh/gh-rsa-rxcats/id_rsa\\n\\n```\\n\\n- config \uc124\uc815\uc744 \uc774\uc6a9\ud558\uc5ec git clone\\n\\n```bash\\n\\n# \ud68c\uc0ac \ud504\ub85c\uc81d\ud2b8 clone (1)\\ngit clone git@gh_company:gh_company-env/server-project-alpha.git\\n\\n# \ud68c\uc0ac \ud504\ub85c\uc81d\ud2b8 clone (2)\\ngit clone git@bb_company:bb_company-env/server-project-beta.git\\n\\n# \uac1c\uc778 \ud504\ub85c\uc81d\ud2b8 clone\\ngit clone git@gh_private:gh_private-env/server-project-omega.git\\n\\n```"},{"id":"setup-develop-env-linux","metadata":{"permalink":"/rxcats-blog/blog/setup-develop-env-linux","source":"@site/blog/2024-03-13-setup-develop-linux.mdx","title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)","description":"Linux (Ubuntu 22.04)","date":"2024-03-13T03:00:00.000Z","formattedDate":"March 13, 2024","tags":[{"label":"setup","permalink":"/rxcats-blog/blog/tags/setup"},{"label":"develop","permalink":"/rxcats-blog/blog/tags/develop"},{"label":"environment","permalink":"/rxcats-blog/blog/tags/environment"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"setup-develop-env-linux","title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)","authors":["rxcats"],"tags":["setup","develop","environment"],"date":"2024-03-13T03:00:00.000Z"},"prevItem":{"title":"SSH config \ub85c git \uacc4\uc815 \uc5f0\ub3d9\ud558\uae30","permalink":"/rxcats-blog/blog/ssh-config"},"nextItem":{"title":"Apache POI autoSizeColumn() \uc0ac\uc6a9\uc2dc \uc624\ub798 \uac78\ub9ac\ub294 \uc99d\uc0c1","permalink":"/rxcats-blog/blog/apache-poi-auto-size-column"}},"content":"## Linux (Ubuntu 22.04)\\n\\n\\n### \uc124\uce58 \uba85\ub839\uc5b4\\n\\n```bash\\n# add sudoers: \uc2dc\uc2a4\ud15c \uad8c\ud55c\uc774 \ud544\uc694\ud560 \ub54c \ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\uae30 \uc704\ud55c \uc124\uc815\\necho \\"ubuntu ALL=(ALL) ALL\\\\nubuntu ALL=(ALL) NOPASSWD:ALL\\" | sudo tee /etc/sudoers.d/10-ubuntu\\n\\nsudo apt -y update\\nsudo apt -y upgrade\\nsudo apt install -y build-essential procps curl file git zsh unzip dirmngr gpg gawk software-properties-common apt-transport-https ca-certificates lsb-release\\n\\n# oh-my-zsh\\nsh -c \\"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\"\\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions\\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting\\n\\n# docker\\necho \\"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\\nsudo apt -y update\\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose\\n\\n# redis\\ncurl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg\\necho \\"deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main\\" | sudo tee /etc/apt/sources.list.d/redis.list\\nsudo apt -y update\\nsudo apt install -y redis\\n\\n# mysql8.0\\nsudo apt install -y mysql-server-8.0\\n\\n# root \uacc4\uc815 \ube44\ubc00\ubc88\ud638 \uc5c6\ub294 \uc0c1\ud0dc\ub85c db \uad6c\ucd95\\nsudo rm -rf /var/lib/mysql\\nsudo mkdir -p /var/lib/mysql\\nsudo mysqld --initialize-insecure --user=mysql\\n\\n# my.cnf\\n[mysqld]\\ndefault_authentication_plugin=mysql_native_password\\ndefault-time-zone = \'+00:00\'\\ngeneral_log = 1\\ngeneral_log_file = general_log.log\\ncharacter_set_server = utf8mb4\\ncollation_server = utf8mb4_general_ci\\n\\n\\n# mysql \uacc4\uc815\uc0dd\uc131\\ncreate user develop@\'%\' identified by \'secret\';\\ngrant all privileges on *.* to develop@\'%\' with grant option;\\nflush privileges;\\n\\n# dynamodb-local\\nsudo mkdir -p /etc/dynamodb\\nsudo mkdir -p /usr/share/dynamodb\\nsudo mkdir -p /usr/share/jre\\n\\n# prepare jre\\nwget https://cdn.azul.com/zulu/bin/zulu17.48.15-ca-jre17.0.10-linux_x64.zip\\nsudo unzip zulu17.48.15-ca-jre17.0.10-linux_x64.zip -d /usr/share/jre\\n\\n# https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html\\nwget https://d1ni2b6xgvw0s0.cloudfront.net/v2.x/dynamodb_local_latest.tar.gz\\nsudo tar xvfz dynamodb_local_latest.tar.gz -C /usr/share/dynamodb\\n\\nsudo cat <<EOF > /etc/dynamodb/config.cfg\\n#The port that dynamo will run on\\nport=8000\\n\\n#The path of the directory for the database file\\ndbPath=/var/lib/dynamodb\\n\\n#This will make the DB region agnostic\\nshared=true\\n\\n#Use this if you want to run the db in memory\\n#note: it wont be saved if the db is stopped\\n#inMemory=true\\n\\n#Use this for any additional args\\n#additionalArgs=(\'-optimiozeDbBeforeStartup\')\\nEOF\\n\\n# prepare shell\\nsudo cat <<EOF > /usr/bin/dynamodb\\n#!/bin/bash\\n\\ndynamodb_java_home=\\"/usr/share/jre/zulu17.48.15-ca-jre17.0.10-linux_x64\\"\\n\\nif [ -e /etc/dynamodb/config.cfg ]; then\\n  source /etc/dynamodb/config.cfg\\nelse\\n  shared=true\\n  dbPath=/var/lib/dynamodb\\n  port=8000\\nfi\\n\\nlibrarypath=/usr/share/dynamodb/DynamoDBLocal_lib\\njar=/usr/share/dynamodb/DynamoDBLocal.jar\\nargs=(\\"-Djava.library.path=$librarypath\\" \\"-jar $jar\\" \\"-port $port\\")\\n\\nif [ $shared ]; then\\n  args+=(\'-sharedDb\')\\nfi\\n\\nif [ $inMemory ]; then\\n  args+=(\'-inMemory\')\\nelse\\n  args+=(\\"-dbPath $dbPath\\")\\nfi\\n\\nargs+=($additionalArgs)\\n\\ncommand=\\"$dynamodb_java_home/bin/java\\"\\n\\necho ${args[*]}\\n\\n$command ${args[*]}\\nEOF\\n\\nsudo chmod +x /usr/bin/dynamodb\\n\\n# prepare systemd\\nsudo cat <<EOF > /usr/lib/systemd/system/dynamodb.service\\n[Unit]\\nDescription=Amazon DynamoDB Local Daemon\\nAfter=network.target\\n\\n[Service]\\nUser=root\\nExecStart=/usr/bin/dynamodb\\n\\n[Install]\\nWantedBy=multi-user.target\\nEOF\\n\\n\\n# systemctl \uad00\ub9ac\\nsudo systemctl enable mysql\\nsudo systemctl enable redis\\nsudo systemctl enable dynamodb\\n\\nsudo systemctl restart mysql\\nsudo systemctl restart redis\\nsudo systemctl restart dynamodb\\n\\n# tools\\nsudo snap install -y btop lsd neovim\\n\\n\\n# windows wslg \ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c tools\\nsudo apt install ibus-hangul\\n\\n# \uc2dc\uc2a4\ud15c \ud55c\uae00 \ud3f0\ud2b8\\nsudo apt install fonts-noto-cjk\\n\\n# nerd-fonts (ligatures)\\n# https://www.nerdfonts.com/font-downloads\\nmkdir ~/.fonts\\nwget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/CascadiaCode.zip\\nunzip CascadiaCode.zip -d ~/.fonts\\n\\n# \ud3f0\ud2b8 \uce90\uc2dc \uac31\uc2e0\\nsudo fc-cache -f -v\\n\\n# jetbrains-toolbox\\n# https://github.com/nagygergo/jetbrains-toolbox-install\\nsudo apt install -y libfuse2 libxi6 libxrender1 libxtst6 mesa-utils libfontconfig libgtk-3-bin tar\\ncurl -fsSL https://raw.githubusercontent.com/nagygergo/jetbrains-toolbox-install/master/jetbrains-toolbox.sh | bash\\n\\n\\n# .zprofile\\nexport XIM=ibus\\nexport XIM_PROGRAM=/usr/bin/ibus\\nexport QT_IM_MODULE=ibus\\nexport GTK_IM_MODULE=ibus\\nexport XMODIFIERS=@im=ibus\\nexport DefaultIMModule=ibus\\n\\nalias vi=\\"vim\\"\\nalias ls=\\"lsd\\"\\nalias ll=\\"lsd -al\\"\\nalias systemctl=\\"sudo systemctl\\"\\nalias apt=\\"sudo apt\\"\\nalias snap=\\"sudo snap\\"\\n\\nif [ -d \\"/snap/bin\\" ]; then\\n    export PATH=$PATH:/snap/bin\\nfi\\n\\nif [ -d \\"$HOME/bin\\" ]; then\\n    export PATH=$PATH:$HOME/bin\\nfi\\n\\nif [ -d \\"$HOME/.local/bin\\" ]; then\\n    export PATH=$PATH:$HOME/.local/bin\\nfi\\n\\nif [ -f /opt/asdf-vm/asdf.sh ]; then\\n    source /opt/asdf-vm/asdf.sh\\n    source $HOME/.asdf/plugins/java/set-java-home.zsh\\nfi\\n\\nif [ -d $HOME/.asdf ]; then\\n    source $HOME/.asdf/asdf.sh\\n    source $HOME/.asdf/plugins/java/set-java-home.zsh\\nfi\\n\\ngit_account_rxcats() {\\n    git config user.name \\"rxcats\\"\\n    git config user.email \\"windpyj80@gmail.com\\"\\n\\n    echo \\"name: $(git config user.name)\\"\\n    echo \\"email: $(git config user.email)\\"\\n}\\n\\ngit_reset_pull() {\\n    if [ -z \\"$1\\" ]\\n    then\\n        echo \\"require parameter origin. ex) origin/master\\"\\n    else\\n        git reset --hard $1\\n        git pull\\n    fi\\n}\\n\\n```"},{"id":"apache-poi-auto-size-column","metadata":{"permalink":"/rxcats-blog/blog/apache-poi-auto-size-column","source":"@site/blog/2023-08-10-apache-poi-auto-size-column.mdx","title":"Apache POI autoSizeColumn() \uc0ac\uc6a9\uc2dc \uc624\ub798 \uac78\ub9ac\ub294 \uc99d\uc0c1","description":"\uc99d\uc0c1","date":"2023-11-30T03:00:00.000Z","formattedDate":"November 30, 2023","tags":[{"label":"apache-poi","permalink":"/rxcats-blog/blog/tags/apache-poi"},{"label":"autoSizeColumn","permalink":"/rxcats-blog/blog/tags/auto-size-column"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"apache-poi-auto-size-column","title":"Apache POI autoSizeColumn() \uc0ac\uc6a9\uc2dc \uc624\ub798 \uac78\ub9ac\ub294 \uc99d\uc0c1","authors":["rxcats"],"tags":["apache-poi","autoSizeColumn"],"date":"2023-11-30T03:00:00.000Z"},"prevItem":{"title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (Ubuntu)","permalink":"/rxcats-blog/blog/setup-develop-env-linux"},"nextItem":{"title":"flyway \ub97c \uc774\uc6a9\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4 schema \uad00\ub9ac","permalink":"/rxcats-blog/blog/flyway"}},"content":"## \uc99d\uc0c1\\n\\n- 300\uac74 \uc815\ub3c4\uc758 \ub370\uc774\ud130\ub97c Apache POI \ub97c \uc774\uc6a9\ud558\uc5ec \uc5d1\uc140\ud30c\uc77c \uc0dd\uc131\uc2dc \uc2dc\uac04\uc774 10\ucd08 \uc774\uc0c1 \uac78\ub9ac\ub294 \uc99d\uc0c1\\n\\n## \uc6d0\uc778\\n\\n- cell \uc758 \uac00\ub85c \ud06c\uae30\ub97c \ubb38\uc790\uc5f4 \uae38\uc774\uc5d0 \ub530\ub77c \uc790\ub3d9\uc73c\ub85c \uc870\uc815\ud574 \uc8fc\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 for loop \ub0b4\uc5d0\uc11c sheet.autoSizeColumn() \ud638\ucd9c\\n- autoSizeColumn \ud568\uc218 \uc2e4\ud589\uc2dc\uac04\uc774 \uae38\uc5b4\uc9c0\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\\n\\n## \ud574\uacb0\\n\\n- \ubb38\uc790\uc5f4 \uae38\uc774\uc5d0 \ub530\ub77c\uc11c \ub108\ube44\ub97c \uacc4\uc0b0\ud558\uc5ec \uc801\uc808\ud558\uac8c \uac00\ub85c \uc0ac\uc774\uc988\ub97c \uc124\uc815\ud558\ub3c4\ub85d \ud558\uc5ec \ud574\uacb0\\n\\n```kotlin\\n\\nfun setColumnSize(sheet: XSSFSheet, index: Int, value: String) {\\n    val defaultColumnWidth = 2048\\n    val maxLength = 70\\n    val characterWidth = 256\\n    val lengthWeight = 1.14388\\n    val len = if (value.length >= maxLength) maxLength else value.length\\n    val adjust = ((len * lengthWeight).toInt() * characterWidth) + defaultColumnWidth\\n\\n    val columnWidth = sheet.getColumnWidth(index)\\n    if (columnWidth > adjust) return\\n\\n    try {\\n        sheet.setColumnWidth(index, adjust)\\n    } catch (e: Exception) {\\n        // ignore\\n    }\\n}\\n\\n```"},{"id":"flyway","metadata":{"permalink":"/rxcats-blog/blog/flyway","source":"@site/blog/2023-11-30-flyway.mdx","title":"flyway \ub97c \uc774\uc6a9\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4 schema \uad00\ub9ac","description":"DB schema \ubc84\uc804\uad00\ub9ac","date":"2023-11-30T03:00:00.000Z","formattedDate":"November 30, 2023","tags":[{"label":"flyway","permalink":"/rxcats-blog/blog/tags/flyway"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"flyway","title":"flyway \ub97c \uc774\uc6a9\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4 schema \uad00\ub9ac","authors":["rxcats"],"tags":["flyway"],"date":"2023-11-30T03:00:00.000Z"},"prevItem":{"title":"Apache POI autoSizeColumn() \uc0ac\uc6a9\uc2dc \uc624\ub798 \uac78\ub9ac\ub294 \uc99d\uc0c1","permalink":"/rxcats-blog/blog/apache-poi-auto-size-column"},"nextItem":{"title":"Retrying Feign Calls","permalink":"/rxcats-blog/blog/openfeign-retry"}},"content":"## DB schema \ubc84\uc804\uad00\ub9ac\\n\\n- flyway \uc640 gradle task \ub97c \ud65c\uc6a9\ud558\uc5ec db schema \ub97c \uad00\ub9ac\ud558\uae30 \uc704\ud55c \ubaa9\uc801\\n\\n### schema sql \ud30c\uc77c \uad00\ub9ac \uc608\uc2dc\\n\\n- \uc608\uc2dc) V2023011900001__Create_admin_user.sql\\n\\n    - V : Prefix (Version)\\n    - 20230119 : \uc0dd\uc131\ub0a0\uc9dc\\n    - 00001 : \uc0dd\uc131 \uc21c\ubc88\\n    - __ : Separator\\n    - Create : CRUD \uad6c\ubd84\\n    - admin_user : \ud14c\uc774\ube14\uba85\\n\\n### seed sql \ud30c\uc77c \uad00\ub9ac \uc608\uc2dc\\n\\n- \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc9c4\ud589\uc2dc \ub9e4\ubc88 \uc2e4\ud589\ub418\ub294 sql \ub85c \uc8fc\ub85c \ub370\uc774\ud130\ub97c \uc785\ub825\ud574\uc8fc\uae30 \uc704\ud55c \uae30\ub2a5\\n- \uc608\uc2dc) R__001_Seed_admin_menu.sql\\n\\n    - R : Prefix (Repeatable)\\n    - __ : Separator\\n    - 001 : \uc21c\ubc88\\n    - Seed : Seed \uba85\uc2dc\\n    - admin_menu : \ud14c\uc774\ube14\uba85\\n\\n### project \ub514\ub809\ud1a0\ub9ac \uad6c\uc131\\n\\n- root\\n    - conf : \uc124\uc815 \ub514\ub809\ud1a0\ub9ac (db \uacc4\uc815 \ub4f1)\\n        - admin.gradle.conf : admin DB \uc124\uc815\\n    - migration : schema sql\\n        - admin\\n            - V2023011900001__Create_admin_user.sql\\n            - V2023011900002__Create_admin_menu.sql\\n    - seed : seed sql\\n        - admin\\n            - R__001_Seed_admin_user.sql\\n            - R__002_Seed_admin_menu.sql\\n\\n### gradle Task \ub97c \uc774\uc6a9\ud55c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc608\uc2dc\\n\\n```gradle build.gradle.kts\\n// flyway gradle plugin \uc124\uc815\\nplugins {\\n    id(\\"org.flywaydb.flyway\\") version \\"9.20.1\\"\\n}\\n\\n// flyway \uac00 gradle task \uc2e4\ud589\uc2dc DB\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uae30 \uc704\ud574 buildscript \uc548\uc5d0 classpath \uc758\uc874\uc131\uc744 \ucd94\uac00 \ud574 \uc918\uc57c \ud568\\nbuildscript {\\n    dependencies {\\n        // classpath dependencies require for flyway database migrate\\n        classpath(\\"org.flywaydb:flyway-mysql:9.20.1\\")\\n        classpath(\\"com.mysql:mysql-connector-j:8.0.33\\")\\n    }\\n}\\n\\nval flywayAdminDbLocations = arrayOf(\\"filesystem:db/migration/admin\\", \\"filesystem:db/seed/admin\\")\\n\\n// \ub9c8\uc774\uadf8\ub808\uc774\uc158 Task \ub4f1\ub85d\\n// \uc2e4\ud589 : `./gradlew adminDbMigrate`\\ntasks.register<FlywayMigrateTask>(\\"adminDbMigrate\\") {\\n    // \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c flyway \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc774 \uc788\ub294 \uacbd\ub85c\\n    workingDirectory = \\"${rootDir.absolutePath}/db-migration\\"\\n\\n    // admin db \uc5d0 \ud574\ub2f9\ub418\ub294 \uc124\uc815\ud30c\uc77c\uacfc \uc2a4\ud0a4\ub9c8, seed sql \uc774 \uc788\ub294 \ub514\ub809\ud1a0\ub9ac \uacbd\ub85c\\n    configFiles = arrayOf(\\"conf/admin.gradle.conf\\")\\n\\n    // flyway.locations \uc5d0 \ud574\ub2f9\ub418\ub294 \uacbd\ub85c \uc124\uc815\\n    locations = arrayOf(\\"filesystem:db/migration/admin\\", \\"filesystem:db/seed/admin\\")\\n\\n    baselineOnMigrate = true\\n}\\n\\n// clean Task \ub4f1\ub85d (drop tables)\\n// \uc2e4\ud589 : `./gradlew adminDbClean`\\ntasks.register<FlywayCleanTask>(\\"adminDbClean\\") {\\n    workingDirectory = \\"${rootDir.absolutePath}/db-migration\\"\\n    configFiles = arrayOf(\\"conf/admin.gradle.conf\\")\\n    locations = arrayOf(\\"filesystem:db/migration/admin\\", \\"filesystem:db/seed/admin\\")\\n    baselineOnMigrate = true\\n    cleanDisabled = false\\n}\\n\\n```"},{"id":"openfeign-retry","metadata":{"permalink":"/rxcats-blog/blog/openfeign-retry","source":"@site/blog/2023-03-07-openfeign-retry.mdx","title":"Retrying Feign Calls","description":"\uc18c\uac1c","date":"2023-03-07T05:00:00.000Z","formattedDate":"March 7, 2023","tags":[{"label":"SpringCloud","permalink":"/rxcats-blog/blog/tags/spring-cloud"},{"label":"OpenFeign","permalink":"/rxcats-blog/blog/tags/open-feign"},{"label":"Retry","permalink":"/rxcats-blog/blog/tags/retry"},{"label":"ErrorDecoder","permalink":"/rxcats-blog/blog/tags/error-decoder"},{"label":"RetryableException","permalink":"/rxcats-blog/blog/tags/retryable-exception"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"openfeign-retry","title":"Retrying Feign Calls","authors":["rxcats"],"tags":["SpringCloud","OpenFeign","Retry","ErrorDecoder","RetryableException"],"date":"2023-03-07T05:00:00.000Z"},"prevItem":{"title":"flyway \ub97c \uc774\uc6a9\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4 schema \uad00\ub9ac","permalink":"/rxcats-blog/blog/flyway"},"nextItem":{"title":"php output_buffering \uc73c\ub85c \uc778\ud55c \uc751\ub2f5\uc5d0 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \uc11e\uc774\ub294 \ubb38\uc81c","permalink":"/rxcats-blog/blog/php-output-buffering"}},"content":"## \uc18c\uac1c\\n\\n- REST \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud1b5\ud574 \uc678\ubd80 \uc11c\ube44\uc2a4\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc740 Feign\uacfc \uac19\uc740 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\uc11c \ub9e4\uc6b0 \uac04\ub2e8\ud558\uac8c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n- \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \ud638\ucd9c \uc911\uc5d0 \ub9ce\uc740 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubb38\uc81c\uc758 \ub300\ubd80\ubd84\uc740 \ubb34\uc791\uc704\uc801\uc774\uac70\ub098 \uc77c\uc2dc\uc801\uc778 \uac83\uc785\ub2c8\ub2e4.\\n- \uc5ec\uae30\uc5d0\uc11c\ub294 \uc2e4\ud328\ud55c \ud638\ucd9c\uc744 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uace0 \ubcf4\ub2e4 \ud0c4\ub825\uc801\uc778 REST \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubd05\ub2c8\ub2e4.\\n\\n## Spring Cloud OpenFeign \ud658\uacbd\uc124\uc815\\n```\\n# application.properties\\nspring.cloud.openfeign.compression.request.enabled=true\\nspring.cloud.openfeign.compression.response.enabled=true\\nspring.cloud.openfeign.client.config.default.logger-level=full\\nspring.cloud.openfeign.client.config.default.connect-timeout=5000\\nspring.cloud.openfeign.client.config.default.read-timeout=5000\\n```\\n\\n## Feign Retryer\\n\\n### Default Implementation\\n- Feign\uc740 \uc7ac\uc2dc\ub3c4 \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud569\ub9ac\uc801\uc778 \uae30\ubcf8 \uad6c\ud604\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.\\n- \uc8fc\uc5b4\uc9c4 \ud69f\uc218\ub9cc\ud07c\ub9cc \uc7ac\uc2dc\ub3c4\ud558\uace0, \uc77c\uc815 \uc2dc\uac04 \uac04\uaca9\uc73c\ub85c \uc2dc\uc791\ud55c \ub2e4\uc74c, \uc7ac\uc2dc\ub3c4\ud560 \ub54c\ub9c8\ub2e4 \uc9c0\uc815\ub41c \ucd5c\ub300\uac12\uae4c\uc9c0 \uac04\uaca9\uc744 \ub298\ub9bd\ub2c8\ub2e4.\\n- \uc2dc\uc791 \uac04\uaca9\uc744 1\ucd08, \ucd5c\ub300 \uac04\uaca9\uc744 3\ucd08, \ucd5c\ub300 \uc2dc\ub3c4 \ud69f\uc218\ub97c 3\ud68c\ub85c \uc815\uc758\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4:\\n\\n```java\\n@Configuration(proxyBeanMethods = false)\\npublic class CustomOpenFeignConfig {\\n    @Bean\\n    public Retryer feignRetryer() {\\n        return new Retryer.Default(1000, TimeUnit.SECONDS.toMillis(3), 3);\\n    }\\n}\\n```\\n\\n### No Retrying\\n- Feign\uc774 \ud638\ucd9c\uc744 \uc7ac\uc2dc\ub3c4\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8 \ube4c\ub354\uc5d0 Retryer.NEVER_RETRY \uad6c\ud604\uc744 \uc81c\uacf5\ud558\uba74 \ub429\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ub9e4\ubc88 \uc608\uc678\ub97c \uc804\ud30c\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4.\\n\\n```java\\n@Configuration(proxyBeanMethods = false)\\npublic class CustomOpenFeignConfig {\\n    @Bean\\n    public Retryer feignNoRetryer() {\\n        return Retryer.NEVER_RETRY;\\n    }\\n}\\n```\\n\\n## Creating Retryable Exceptions\\n\\n- \uc774\uc804\uc5d0\ub294 \ud638\ucd9c\uc744 \uc7ac\uc2dc\ub3c4\ud558\ub294 \ube48\ub3c4\ub97c \uc81c\uc5b4\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4.\\n- \uc774\uc81c \ud638\ucd9c\uc744 \uc7ac\uc2dc\ub3c4\ud560 \ub54c\uc640 \ub2e8\uc21c\ud788 \uc608\uc678\ub97c \ub358\uc9c8 \ub54c\ub97c \uc81c\uc5b4\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n### ErrorDecoder \uc640 RetryableException\\n- \uc798\ubabb\ub41c \uc751\ub2f5\uc744 \ubc1b\uc73c\uba74 Feign\uc740 \uc774\ub97c \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud560\uc9c0 \uacb0\uc815\ud558\ub294 ErrorDecoder \uc778\ud130\ud398\uc774\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4.\\n- \uac00\uc7a5 \uc911\uc694\ud55c \uac83\uc740 \ub514\ucf54\ub354\uac00 \uc608\uc678\ub97c RetryableException\uc758 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub9e4\ud551\ud558\uc5ec Retryer\uac00 \ud638\ucd9c\uc744 \uc7ac\uc2dc\ub3c4\ud560 \uc218 \uc788\ub3c4\ub85d \ud55c\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4.\\n- ErrorDecoder\uc758 \uae30\ubcf8 \uad6c\ud604\uc740 \uc751\ub2f5\uc5d0 \\"Retry-After\\" \ud5e4\ub354\uac00 \ud3ec\ud568\ub41c \uacbd\uc6b0\uc5d0\ub9cc RetryableException \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uac00\uc7a5 \uc77c\ubc18\uc801\uc73c\ub85c 503 \uc11c\ube44\uc2a4 \uc0ac\uc6a9 \ubd88\uac00 \uc751\ub2f5\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n- \uc774\ub294 \uc88b\uc740 \uae30\ubcf8 \ub3d9\uc791\uc774\uc9c0\ub9cc \ub54c\ub85c\ub294 \ub354 \uc720\uc5f0\ud574\uc57c \ud560 \ub54c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\\n- \uc608\ub97c \ub4e4\uc5b4, \ub54c\ub54c\ub85c 500 \ub0b4\ubd80 \uc11c\ubc84 \uc624\ub958\ub85c \ubb34\uc791\uc704\ub85c \uc751\ub2f5\ud558\ub294 \uc678\ubd80 \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud558\uace0 \uc788\ub294\ub370 \uc774\ub97c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4.\\n- \uc6b0\ub9ac\uac00 \ud560 \uc218 \uc788\ub294 \uc77c\uc740 \ub2e4\uc74c \ubc88\uc5d0\ub294 \ud1b5\ud654\uac00 \uc131\uacf5\ud560 \uac83\uc774\ub77c\ub294 \uac83\uc744 \uc54c\uae30 \ub54c\ubb38\uc5d0 \ud1b5\ud654\ub97c \ub2e4\uc2dc \uc2dc\ub3c4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\\n- \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc0ac\uc6a9\uc790 \uc815\uc758 ErrorDecoder \uad6c\ud604\uc744 \uc791\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n\\n### Custom Error Decoder \uc0dd\uc131\\n\\n- \uc0ac\uc6a9\uc790 \uc815\uc758 \ub514\ucf54\ub354\uc5d0\uc11c \uad6c\ud604\ud574\uc57c \ud558\ub294 \uba54\uc11c\ub4dc\ub294 decode \ud558\ub098\ubfd0\uc785\ub2c8\ub2e4.\\n- \uc774 \uba54\uc11c\ub4dc\ub294 \ub450 \uac1c\uc758 \uc778\uc790, \uc989 String \uba54\uc11c\ub4dc \ud0a4\uc640 Response \uac1d\uccb4\ub97c \ubc1b\uc2b5\ub2c8\ub2e4.\\n- \uc774 \uba54\uc11c\ub4dc\ub294 \uc608\uc678\ub97c \ubc18\ud658\ud558\ub294\ub370, \uc774 \uc608\uc678\uac00 RetryableException\uc758 \uc778\uc2a4\ud134\uc2a4\uc774\uac70\ub098 \uad6c\ud604\uc5d0 \ub530\ub77c \ub2e4\ub978 \uc608\uc678\uc778 \uacbd\uc6b0 \uc608\uc678\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\\n- \ub514\ucf54\ub529 \uba54\uc11c\ub4dc\ub294 \ub2e8\uc21c\ud788 \uc751\ub2f5\uc758 \uc0c1\ud0dc \ucf54\ub4dc\uac00 500\ubcf4\ub2e4 \ub192\uac70\ub098 \uac19\uc740\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.\\n- \uc774 \uacbd\uc6b0 RetryableException\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0, FeignException \ud074\ub798\uc2a4\uc758 errorStatus \ud329\ud1a0\ub9ac \ud568\uc218\ub85c \uc0dd\uc131\ub41c \uae30\ubcf8 FeignException\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4:\\n\\n```java\\npublic class Custom5xxErrorDecoder implements ErrorDecoder {\\n    @Override\\n    public Exception decode(String methodKey, Response response) {\\n        FeignException exception = feign.FeignException.errorStatus(methodKey, response);\\n        int status = response.status();\\n        if (status >= 500) {\\n            return new RetryableException(\\n              response.status(),\\n              exception.getMessage(),\\n              response.request().httpMethod(),\\n              exception,\\n              null,\\n              response.request());\\n        }\\n        return exception;\\n    }\\n}\\n```\\n\\n### Custom Error Decoder \uc124\uc815 \ucd94\uac00\\n```java\\n@Configuration(proxyBeanMethods = false)\\npublic class CustomOpenFeignConfig {\\n    @Bean\\n    public ErrorDecoder custom5xxErrorDecoder() {\\n        return new Custom5xxErrorDecoder();\\n    }\\n}\\n```"},{"id":"php-output-buffering","metadata":{"permalink":"/rxcats-blog/blog/php-output-buffering","source":"@site/blog/2023-01-10-php-output-buffering.mdx","title":"php output_buffering \uc73c\ub85c \uc778\ud55c \uc751\ub2f5\uc5d0 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \uc11e\uc774\ub294 \ubb38\uc81c","description":"\uc99d\uc0c1","date":"2023-01-10T03:00:00.000Z","formattedDate":"January 10, 2023","tags":[{"label":"php","permalink":"/rxcats-blog/blog/tags/php"},{"label":"output_buffering","permalink":"/rxcats-blog/blog/tags/output-buffering"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"php-output-buffering","title":"php output_buffering \uc73c\ub85c \uc778\ud55c \uc751\ub2f5\uc5d0 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \uc11e\uc774\ub294 \ubb38\uc81c","authors":["rxcats"],"tags":["php","output_buffering"],"date":"2023-01-10T03:00:00.000Z"},"prevItem":{"title":"Retrying Feign Calls","permalink":"/rxcats-blog/blog/openfeign-retry"},"nextItem":{"title":"c# attribute \ub97c \ud65c\uc6a9\ud55c API enum \uc815\uc758","permalink":"/rxcats-blog/blog/csharp-url-attribute"}},"content":"## \uc99d\uc0c1\\n\\n- \uc2ac\ub799 api \ub97c \ud1b5\ud574 \uc5d0\ub7ec \uba54\uc2dc\uc9c0\ub97c webhook \uc5d0 \uc804\uc1a1\ud558\ub294 api \ub97c \uc0ac\uc6a9\ud558\ub294 \uae30\ub2a5\uc774 \uc788\uc5c8\ub294\ub370 \ud574\ub2f9 webhook \uc744 \ubc1b\ub358 \ucc44\ub110\uc774 \uc774\uc6a9 \ubd88\uac00\ub2a5\ud55c \uc0c1\ud669.\\n- \uc2ac\ub799 \uba54\uc2dc\uc9c0 \uc0ac\uc6a9\ud55c \ud6c4 \uc751\ub2f5 body \uc5d0 no_serviceAABBCCDD \ucc98\ub7fc no_service \uac00 \ubd99\ub294 \ud604\uc0c1\\n\\n## \uc6d0\uc778\\n\\n- \uc2ac\ub799\uc5d0\uc11c\ub294 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud558\uc600\uc744 \uacbd\uc6b0 json \uc73c\ub85c \uc751\ub2f5\uc744 \uc8fc\uc9c0 \uc54a\uace0 response body \uc5d0 \ud14d\uc2a4\ud2b8\ub85c \uc804\ub2ec\ud558\ub294 \uacbd\uc6b0\uac00 \uc874\uc7ac\\n    - https://api.slack.com/messaging/webhooks\\n    - \uc81c\uc77c \ud558\ub2e8 Handling errors \ubd80\ubd84\uc5d0 no_service \uad00\ub828 \uc0ac\ud56d \ucc38\uace0\\n- php \uc5d0\uc11c curl \uc744 \uc774\uc6a9\ud558\uc5ec api \ub97c \ud638\ucd9c\ud558\uace0 \uc788\ub294\ub370 curl \uc635\uc158\uc911\uc5d0 CURLOPT_RETURNTRANSFER \ub97c false \ub85c \uc124\uc815\ud558\uc600\uc744 \uacbd\uc6b0 response body \uc5d0 \uc77c\ubc18 text \uac00 \uc788\uc73c\uba74 output_buffering \uc5d0 \uae30\ub85d\uc744 \ud558\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\\n- \ub530\ub77c\uc11c \uc2ac\ub799 \uba54\uc2dc\uc9c0 \uc804\uc1a1\uc2dc no_service \uac00 \uba3c\uc800 output_buffering \uc5d0 \ub4e4\uc5b4\uac00\uace0 \uc774\ud6c4 \uc751\ub2f5 \uba54\uc2dc\uc9c0\ub97c \ube4c\ub4dc \ud558\uac8c \ub418\uc5b4 \ubc1c\uc0dd\ud55c \ud604\uc0c1.\\n\\n## \ud574\uacb0\\n\\n- \uc751\ub2f5 \uba54\uc2dc\uc9c0\ub97c \uc0dd\uc131\ud560 \ub54c \uc774\uc804\uc5d0 \ubc1c\uc0dd\ub41c output_buffering \uba54\uc2dc\uc9c0\ub97c \uc9c0\uc6b0\ub3c4\ub85d \ucc98\ub9ac\\n\\n```php\\nfunction oret($val) {\\n    // ...\\n\\n    $response = JsonEnAES($arr);\\n\\n    // clear previously echoed item\\n    // rendering \ud558\uae30 \uc804 echo \ub41c \ubb38\uc790\uc5f4\uc744 \uc9c0\uc6cc\uc900\ub2e4.\\n    ob_clean();\\n\\n    return $response;\\n}\\n\\n```"},{"id":"csharp-url-attribute","metadata":{"permalink":"/rxcats-blog/blog/csharp-url-attribute","source":"@site/blog/2023-11-27-csharp-url-attribute.mdx","title":"c# attribute \ub97c \ud65c\uc6a9\ud55c API enum \uc815\uc758","description":"\ub3c4\uc785 \ub3d9\uae30","date":"2023-01-10T03:00:00.000Z","formattedDate":"January 10, 2023","tags":[{"label":"csharp","permalink":"/rxcats-blog/blog/tags/csharp"},{"label":"attribute","permalink":"/rxcats-blog/blog/tags/attribute"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"csharp-url-attribute","title":"c# attribute \ub97c \ud65c\uc6a9\ud55c API enum \uc815\uc758","authors":["rxcats"],"tags":["csharp","attribute"],"date":"2023-01-10T03:00:00.000Z"},"prevItem":{"title":"php output_buffering \uc73c\ub85c \uc778\ud55c \uc751\ub2f5\uc5d0 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \uc11e\uc774\ub294 \ubb38\uc81c","permalink":"/rxcats-blog/blog/php-output-buffering"},"nextItem":{"title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (MacOS)","permalink":"/rxcats-blog/blog/setup-develop-env-mac"}},"content":"## \ub3c4\uc785 \ub3d9\uae30\\n\\n- \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c API URL \uc815\uc758\ub97c \uc5b4\ub835\uac8c \ud558\uace0 \uc788\uc5b4 c# attribute \uc640 \ud655\uc7a5\ud568\uc218\ub85c \uc218\uc6d4\ud558\uac8c \ud558\ub3c4\ub85d \ub3d5\uae30 \uc704\ud568\\n\\n## \uc608\uc2dc\\n\\n\\n```csharp\\n\\ninternal class UrlValueAttribute : Attribute\\n{\\n    private readonly string _value;\\n\\n    public UrlValueAttribute(string value)\\n    {\\n        _value = value;\\n    }\\n\\n    public string Value => _value;\\n}\\n\\npublic static class UrlValueAttributeExtensions\\n{\\n    private const string URL_PREFIX = \\"/api/game\\";\\n\\n    public static string GetUrl(this Enum value)\\n    {\\n        Type type = value.GetType();\\n        FieldInfo fieldInfo = type.GetField(value.ToString());\\n        UrlValueAttribute[] attributes = fieldInfo.GetCustomAttributes(typeof(UrlValueAttribute), false) as UrlValueAttribute[];\\n\\n        if ((attributes == null || 0 == attributes.Length) || string.IsNullOrEmpty(attributes[0].Value))\\n        {\\n            throw new Exception(\\"UrlValueAttribute is empty\\");\\n        }\\n\\n        StringBuilder url = new StringBuilder();\\n        url.Append(Managers._director.GetServerUrl());\\n        url.Append(URL_PREFIX);\\n        url.Append(attributes[0].Value);\\n        return url.ToString();\\n    }\\n}\\n\\npublic enum GameApiType\\n{\\n    // Lobby API\\n#if UNITY_EDITOR || UNITY_WEBGL\\n    [UrlValue(\\"/auth/login/unity\\")] Login,\\n#else\\n    [UrlValue(\\"/auth/login\\")] Login,\\n#endif\\n    [UrlValue(\\"/userdata/get\\")] UserDataGet,\\n    [UrlValue(\\"/userdata/update\\")] UserDataUpdate,\\n}\\n\\n```"},{"id":"setup-develop-env-mac","metadata":{"permalink":"/rxcats-blog/blog/setup-develop-env-mac","source":"@site/blog/2022-12-31-setup-develop-env.mdx","title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (MacOS)","description":"Mac Xcode Command Line Toos \uc124\uce58","date":"2022-12-31T03:00:00.000Z","formattedDate":"December 31, 2022","tags":[{"label":"setup","permalink":"/rxcats-blog/blog/tags/setup"},{"label":"develop","permalink":"/rxcats-blog/blog/tags/develop"},{"label":"environment","permalink":"/rxcats-blog/blog/tags/environment"}],"hasTruncateMarker":false,"authors":[{"name":"rxcats","title":"Game Backend Developer","url":"https://github.com/rxcats","imageURL":"https://avatars.githubusercontent.com/u/6582519?v=4","key":"rxcats"}],"frontMatter":{"slug":"setup-develop-env-mac","title":"\uac1c\ubc1c\ud658\uacbd \uc124\uc815\ud558\uae30 (MacOS)","authors":["rxcats"],"tags":["setup","develop","environment"],"date":"2022-12-31T03:00:00.000Z"},"prevItem":{"title":"c# attribute \ub97c \ud65c\uc6a9\ud55c API enum \uc815\uc758","permalink":"/rxcats-blog/blog/csharp-url-attribute"}},"content":"## Mac Xcode Command Line Toos \uc124\uce58\\n```bash\\nxcode-select --install\\n```\\n\\n## Oh My ZSH \uc124\uce58\\n- https://ohmyz.sh/\\n\\n```bash\\nsh -c \\"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\\"\\n\\n# zsh-autosuggestions\\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions\\n\\n# zsh-syntax-highlighting\\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting\\n```\\n\\n## \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790 Homebrew \uc124\uce58\\n- https://brew.sh/\\n\\n```bash\\n/bin/bash -c \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\"\\n```\\n\\n### Homebrew \ud658\uacbd\uc124\uc815\\n- Homebrew \uc124\uce58\ud6c4 $PATH \uc124\uc815\uc774 \ub418\uc9c0 \uc54a\uc558\uc744 \uacbd\uc6b0 brew \uba85\ub839\uc5b4\uac00 \ub3d9\uc791\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c $PATH \uc124\uc815\uc744 \ucd94\uac00\\n- .zprofile \uc5d0 \ucd94\uac00\ub418\ub3c4\ub85d \ud558\uae30\\n\\n```shell\\necho \'eval \\"$(/opt/homebrew/bin/brew shellenv)\\"\' >> ~/.zprofile\\nsource ~/.zprofile\\nbrew doctor\\n```\\n\\n## \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790 asdf \uc124\uce58\\n- https://asdf-vm.com/\\n- \uc608\ub97c\ub4e4\uba74 jdk \uc5ec\ub7ec\uac1c\uc758 \ubc84\uc804\uc744 \uc124\uce58\ud558\uace0 \uad00\ub9ac\ud560 \uc218 \uc788\uc74c\\n\\n```bash\\nbrew install asdf\\n```\\n\\n### JDK \uc124\uce58\\n```shell\\nasdf plugin add java\\nasdf install java liberica-21.0.2+14\\nasdf global java liberica-21.0.2+14\\n```\\n\\n### Node JS \uc124\uce58\\n\\n```bash\\nasdf plugin add nodejs\\nasdf install nodejs 20.11.1\\nasdf global nodejs 20.11.1\\n```\\n\\n## Docker \uc124\uce58\\n- Docker Desktop \ub300\uccb4\\n\\n```bash\\nbrew install colima\\n```\\n\\n## JetBrains ToolBox \uc124\uce58\\n\\n```bash\\nbrew install --cask jetbrains-toolbox\\n```"}]}')}}]);